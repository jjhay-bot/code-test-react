{"version":3,"sources":["components/Spinner/Spinner.js","components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["Spinner","show","className","SearchBar","props","s","useState","searchValue","setSearchValue","displayClear","length","filteredProducts","products","filter","product","includes","type","value","charAt","toUpperCase","slice","onChange","e","target","placeholder","onClick","map","App","productsState","setProductsState","useEffect","fetch","then","res","json","producstsArray","newProductsState","mission_name","hasProducts","id","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"uRASeA,MANf,SAAiBC,GAEf,OAAOA,EAAO,qBAAKC,UAAU,WAAkB,MC2ClCC,G,MA7CG,SAACC,GACf,IAgBoBC,EAhBpB,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUMC,EAAeF,EAAYG,OAAS,EAEpCC,EAAmBP,EAAMQ,SAASC,QAAO,SAACC,GAC5C,OAAOA,EAAQC,SAASR,MAQ5B,OACI,sBAAKL,UAAW,SAAhB,UACI,sBAAKA,UAAW,eAAhB,UACI,uBAAOc,KAAK,OAAOC,OARXZ,EAQ6BE,EAP5B,kBAANF,EAAuB,GAC3BA,EAAEa,OAAO,GAAGC,cAAgBd,EAAEe,MAAM,IAMgBC,SAtBrC,SAACC,GACvBd,EAAec,EAAEC,OAAON,QAqBgEO,YAAY,cAC3Ff,GAAgB,wBAAQgB,QAnBZ,WACrBjB,EAAe,KAkBU,sBAIrB,oBAAIN,UAAW,SAAf,SACKS,EAAiBe,KAAI,SAACZ,GACnB,OACI,qBAAKZ,UAAW,OAAhB,SACI,6BAAoBY,GAAVA,eCCvBa,G,MAhCH,WACR,MAA0CrB,mBAAS,IAAnD,mBAAOsB,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WAENC,MAAM,0CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH,IAAMC,EAAmBD,EAAeT,KAAI,SAACZ,GACzC,OAASA,EAAQuB,gBAGrBR,EAAiBO,QAE1B,IAEH,IAAME,EAAcV,EAAclB,OAAS,EAE3C,OACI,qBAAK6B,GAAG,YAAR,SAMKD,EAAc,cAAC,EAAD,CAAU1B,SAAUgB,IAAoB,cAAC,EAAD,QCzB7DY,G,MAAmBC,SAASC,eAAe,SAEjDC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.53a81425.chunk.js","sourcesContent":["import React from 'react'\nimport './spinner.css';\n\nfunction Spinner(show) {\n\n  return show ? <div className=\"loader\"></div> : null;\n}\n\n\nexport default Spinner;\n","import React, { useState } from 'react'\nimport \"./SearchBar.css\"\n\nconst SearchBar = (props) => {\n    const [searchValue, setSearchValue] = useState(\"\")            // default, updated\n\n    const handleInputChange = (e) => {\n        setSearchValue(e.target.value)\n    }\n\n    const handleClearClick = () => {\n        setSearchValue(\"\")\n    }\n\n    const displayClear = searchValue.length > 0\n\n    const filteredProducts = props.products.filter((product) => {\n        return product.includes(searchValue)\n    })\n\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n\n    return (\n        <div className={'center'}>\n            <div className={'search_field'}>\n                <input type=\"text\" value={capitalize(searchValue)} onChange={handleInputChange} placeholder=\"search...\" />\n                {displayClear && <button onClick={handleClearClick}>clear</button>}  \n            </div>\n                     \n\n            <ul className={'center'}>\n                {filteredProducts.map((product) => {\n                    return (\n                        <div className={'card'}>\n                            <li  key={product}>{product}</li>\n                        </div>\n                    )\n                })}\n            </ul>\n            \n        </div>\n    )\n   \n}\n\nexport default SearchBar","import React, { useState , useEffect } from 'react'\nimport CountButton from './CountButton/CountButton'\nimport Spinner from './Spinner/Spinner'\nimport SeachBar from './SearchBar/SearchBar'\nimport TestUse from './TestUse/TestUse'\n\nconst App = () => {\n    const [productsState, setProductsState] = useState([])\n\n    useEffect(() => {\n\n        fetch('https://api.spacexdata.com/v3/launches')\n            .then((res) => res.json())\n            .then((producstsArray) => {                       // mission_name, upcoming, launch_success, launch_year, article_link, video_link\n                const newProductsState = producstsArray.map((product) => {\n                    return ( product.mission_name )        \n\n                })\n                setProductsState(newProductsState)\n            })\n    }, [])\n\n    const hasProducts = productsState.length > 0\n\n    return (\n        <div id='pagelimit'>\n            {/* <CountButton incrementBy={1} />\n            <CountButton incrementBy={5} buttonColor={\"blue\"}/> */}\n\n            {/* <TestUse incrementBy={1} /> */}\n\n            {hasProducts ? <SeachBar products={productsState} /> : <Spinner /> }\n\n\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js'\nimport index from './index.css';\n\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App />, reactContentRoot)"],"sourceRoot":""}